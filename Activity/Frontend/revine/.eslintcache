[{"C:\\Users\\User\\OneDrive\\Desktop\\Full Stack App\\Activity\\Frontend\\revine\\src\\index.js":"1","C:\\Users\\User\\OneDrive\\Desktop\\Full Stack App\\Activity\\Frontend\\revine\\src\\reportWebVitals.js":"2","C:\\Users\\User\\OneDrive\\Desktop\\Full Stack App\\Activity\\Frontend\\revine\\src\\App.js":"3","C:\\Users\\User\\OneDrive\\Desktop\\Full Stack App\\Activity\\Frontend\\revine\\src\\Component\\userComponent\\Profile.jsx":"4","C:\\Users\\User\\OneDrive\\Desktop\\Full Stack App\\Activity\\Frontend\\revine\\src\\Component\\userComponent\\UserView.jsx":"5","C:\\Users\\User\\OneDrive\\Desktop\\Full Stack App\\Activity\\Frontend\\revine\\src\\Component\\userComponent\\ProfileList.jsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":240,"mtime":1611825476450,"results":"10","hashOfConfig":"8"},{"size":3046,"mtime":1611838495817,"results":"11","hashOfConfig":"8"},{"size":2085,"mtime":1611834312431,"results":"12","hashOfConfig":"8"},{"size":711,"mtime":1611834205559,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"o0qrc1",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\User\\OneDrive\\Desktop\\Full Stack App\\Activity\\Frontend\\revine\\src\\index.js",[],["28","29"],"C:\\Users\\User\\OneDrive\\Desktop\\Full Stack App\\Activity\\Frontend\\revine\\src\\reportWebVitals.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Full Stack App\\Activity\\Frontend\\revine\\src\\App.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Full Stack App\\Activity\\Frontend\\revine\\src\\Component\\userComponent\\Profile.jsx",[],"C:\\Users\\User\\OneDrive\\Desktop\\Full Stack App\\Activity\\Frontend\\revine\\src\\Component\\userComponent\\UserView.jsx",["30","31"],"import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport Profile from './Profile';\r\nimport ProfileList from './ProfileList';\r\n\r\nclass UserView extends Component {\r\n\r\n    state = {\r\n        currentMenu: \"Suggestion\",\r\n        listForProfileList: []\r\n    }\r\n\r\n    // suggestion\r\n    componentDidMount(){\r\n        // api => suggestions\r\n    }   \r\n\r\n    updateCurrentMenu = (cMenu) => {\r\n        console.log(cMenu);\r\n        this.setState({ currentMenu: cMenu });\r\n        \r\n        // Followers\r\n        let isFollowers = cMenu == \"Followers\";\r\n\r\n        if(isFollowers){\r\n            axios.get(\"/api/v1/user/request/ce5dbe3c-036f-4743-aa84-637ef032508c\")\r\n                .then((res) => {\r\n                    let allFollowers = res.data.message;\r\n                    let myFollowers = allFollowers.filter(follower => follower.is_accepted === 1);\r\n                    let followersDetailsPArray = myFollowers.map((follower) => {\r\n                        return axios.get(`/api/v1/user/${follower.follower_id}`);\r\n                    });\r\n                    return Promise.all(followersDetailsPArray);\r\n                }).then((fDRArray) => {\r\n                    let listForProfileList = [];\r\n                    fDRArray.map((follower) => {\r\n                        const { name, handle, uid } = follower.data.user;\r\n                        listForProfileList.push({ name, handle, uid });\r\n                    });\r\n                    // console.log(listForProfileList);\r\n                    this.setState({\r\n                    listForProfileList,\r\n                    currentMenu: cMenu\r\n                });\r\n\r\n                })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() { \r\n        let {listForProfileList} = this.state;\r\n        return ( \r\n            <React.Fragment>\r\n            <div className=\"user-view\">\r\n                <Profile updateCurrentMenu={this.updateCurrentMenu}></Profile>\r\n                <ProfileList list={listForProfileList}></ProfileList>\r\n            </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default UserView;","C:\\Users\\User\\OneDrive\\Desktop\\Full Stack App\\Activity\\Frontend\\revine\\src\\Component\\userComponent\\ProfileList.jsx",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":23,"column":33,"nodeType":"38","messageId":"39","endLine":23,"endColumn":35},{"ruleId":"40","severity":1,"message":"41","line":36,"column":45,"nodeType":"42","messageId":"43","endLine":36,"endColumn":47},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]